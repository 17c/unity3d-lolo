//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ShibaInu_DoubleImageShakeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ShibaInu.DoubleImageShake), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Play", Play);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("shader", get_shader, set_shader);
		L.RegVar("material", get_material, set_material);
		L.RegVar("shakeRange", get_shakeRange, set_shakeRange);
		L.RegVar("shakeInterval", get_shakeInterval, set_shakeInterval);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)ToLua.CheckObject<ShibaInu.DoubleImageShake>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.Play(arg0);
				return 0;
			}
			else if (count == 3)
			{
				ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)ToLua.CheckObject<ShibaInu.DoubleImageShake>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				obj.Play(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)ToLua.CheckObject<ShibaInu.DoubleImageShake>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				obj.Play(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)ToLua.CheckObject<ShibaInu.DoubleImageShake>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
				obj.Play(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)ToLua.CheckObject<ShibaInu.DoubleImageShake>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
				obj.Play(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ShibaInu.DoubleImageShake.Play");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			UnityEngine.Shader ret = obj.shader;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shader on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			UnityEngine.Material ret = obj.material;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index material on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shakeRange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			UnityEngine.Vector2 ret = obj.shakeRange;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shakeRange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shakeInterval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			float ret = obj.shakeInterval;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shakeInterval on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			UnityEngine.Shader arg0 = (UnityEngine.Shader)ToLua.CheckObject(L, 2, typeof(UnityEngine.Shader));
			obj.shader = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shader on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.material = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index material on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shakeRange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.shakeRange = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shakeRange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shakeInterval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShibaInu.DoubleImageShake obj = (ShibaInu.DoubleImageShake)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.shakeInterval = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shakeInterval on a nil value");
		}
	}
}

